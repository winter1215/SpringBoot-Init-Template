<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tower.common.mapper.MessagesMapper">

    <resultMap id="BaseResultMap" type="com.tower.common.model.pojo.Messages">
            <id property="id" column="id" jdbcType="BIGINT"/>
            <result property="senderId" column="sender_id" jdbcType="BIGINT"/>
            <result property="receiverId" column="receiver_id" jdbcType="BIGINT"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="isRead" column="is_read" jdbcType="BIT"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="MsgItemVoResultMap" type="com.tower.common.model.vo.MessageListItemVo">
        <id property="msgId" column="msg_id"/>
        <result property="friendUserId" column="friend_user_id"/>
        <result property="lastMessage" column="last_message"/>
        <result property="modifyTime" column="modify_time"/>
        <result property="avatar" column="avatar"/>
        <result property="nickName" column="nickname"/>
        <result property="remark" column="remark"/>
        <result property="unreadMessage" column="unread_message"/>
    </resultMap>

    <resultMap id="MessageVoResultMap" type="com.tower.common.model.vo.MessageVo">
        <id property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="sender" column="sender"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,sender_id,receiver_id,
        content,is_read,create_time
    </sql>


    <delete id="deleteMsg">
        delete from message
        where conversation_id = #{conversationID}
    </delete>

    <select id="getMessageList" resultMap="MsgItemVoResultMap">
        select
            msg.id as msg_id,
            sub.friend_user_id as friend_user_id,
            msg.content as last_message,
            msg.create_time as modify_time,
            # online_status
            u.avatar as avatar,
                u.nickname as nickname,
            f.remark as remark,
            ( select count(*) from messages
              where sender_id = friend_user_id
                and receiver_id = #{loginUserId}
                and is_read = 0
            ) as unread_message
        from messages msg
                 JOIN (
            SELECT
                CONCAT(
                        LEAST(sender_id, receiver_id),
                        ':',
                        GREATEST(sender_id, receiver_id)
                    ) AS conversation_id,
                IF(sender_id = #{loginUserId} , receiver_id, sender_id) as friend_user_id,
                MAX(create_time) AS last_message_time
            FROM messages
            WHERE sender_id = #{loginUserId} OR receiver_id = #{loginUserId}
            GROUP BY conversation_id
        ) sub ON msg.conversation_id = sub.conversation_id AND msg.create_time = sub.last_message_time
                 join friend f
                      on f.user_id = #{loginUserId} and f.friend_id = friend_user_id
                 join `user` u on u.id = friend_user_id
        where msg.id = (
            select id
            from messages
            where conversation_id = msg.conversation_id
              and create_time = msg.create_time
            ORDER BY id DESC
            limit 1
            );
    </select>

    <select id="unreadMessageCount" resultType="java.lang.Integer">
        select count(*)
        from messages msg
            join friend f
                on f.user_id = #{loginUserId} and f.friend_id = msg.sender_id
        where msg.receiver_id = #{loginUserId} and msg.is_read = 0
    </select>

    <select id="getHistory" resultMap="MessageVoResultMap">
        select id,
               IF(sender_id = #{loginUserId}, 0, 1) as sender,
               content,
               create_time
        from messages msg
        where msg.conversation_id = #{conversationId}
           </select>
</mapper>
